name: 빌드 검증

on:
  pull_request:
    branches: [dev, develop, main, release]
    types: [opened, synchronize, reopened]

concurrency:
  group: 'build-validation-${{ github.event.pull_request.number }}'
  cancel-in-progress: true

jobs:
  build:
    name: 빌드 체크
    runs-on: ubuntu-latest

    steps:
      - name: 소스 코드 체크아웃
        uses: actions/checkout@v4

      - name: Node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: pnpm 설치
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: pnpm 캐시 활성화
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: 환경변수 설정
        run: |
          echo "${{ secrets.DEV_ENV }}" | base64 --decode > .env

      - name: 의존성 설치
        run: |
          pnpm install

      - name: Next.js 빌드 검증
        run: |
          pnpm build

      # - name: 도커 컴포즈 테스트
      #   run: |
      #     docker compose up -d --build

      - name: Next.js 서버 실행
        run: |
          pnpm start > server.log 2>&1 &
          echo $! > server.pid  # 프로세스 ID 저장

      - name: 애플리케이션 상태 확인
        run: |
          sleep 10  # 애플리케이션 시작 대기
          if ps -p $(cat server.pid) > /dev/null; then
            echo "애플리케이션이 실행 중입니다"
          else
            echo "애플리케이션 실행 실패" && exit 1
          fi

      - name: 헬스체크 API 테스트
        run: |
          response_code=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000)
          content_type=$(curl -s -I http://localhost:3000 | grep -i content-type)

          if [ "$response_code" = "200" ] && [[ "$content_type" == *"text/html"* ]]; then
            echo "헬스체크 성공"
          else
            echo "헬스체크 실패" && exit 1
          fi

      - name: 애플리케이션 프로세스 종료
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
            rm server.pid
          fi
